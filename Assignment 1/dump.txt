[*] starting @ 12:21:56 /2022-04-15/

[12:21:56] [INFO] parsing HTTP request from 'Extract.txt'
[12:21:57] [INFO] testing connection to the target URL
[12:21:58] [INFO] testing if the target URL content is stable
[12:21:59] [INFO] target URL content is stable
[12:21:59] [INFO] testing if GET parameter 'page' is dynamic
[12:21:59] [INFO] GET parameter 'page' appears to be dynamic
[12:21:59] [WARNING] heuristic (basic) test shows that GET parameter 'page' might not be injectable
[12:21:59] [INFO] heuristic (XSS) test shows that GET parameter 'page' might be vulnerable to cross-site scripting (XSS) attacks
[12:22:00] [INFO] heuristic (FI) test shows that GET parameter 'page' might be vulnerable to file inclusion (FI) attacks
[12:22:00] [INFO] testing for SQL injection on GET parameter 'page'
[12:22:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:22:00] [WARNING] reflective value(s) found and filtering out
[12:22:02] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:22:02] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:22:02] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:22:03] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[12:22:03] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[12:22:03] [INFO] testing 'Generic inline queries'
[12:22:04] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:22:04] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[12:22:04] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[12:22:04] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:22:05] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'                                                                                         
[12:22:05] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'                                                                             
[12:22:05] [INFO] testing 'Oracle AND time-based blind'                                                                                                   

[12:22:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'                                                                                  
[12:22:58] [WARNING] GET parameter 'page' does not seem to be injectable                                                                                  
[12:22:58] [INFO] testing if GET parameter 'username' is dynamic                                                                                          
[12:22:59] [WARNING] GET parameter 'username' does not appear to be dynamic                                                                               
[12:22:59] [INFO] heuristic (basic) test shows that GET parameter 'username' might be injectable (possible DBMS: 'PostgreSQL or MySQL')                   
[12:22:59] [INFO] heuristic (XSS) test shows that GET parameter 'username' might be vulnerable to cross-site scripting (XSS) attacks                                                                                                        
[12:22:59] [INFO] testing for SQL injection on GET parameter 'username'                                                                                                                                                                     
it looks like the back-end DBMS is 'PostgreSQL or MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] y                                                                                                              
for the remaining tests, do you want to include all tests for 'PostgreSQL or MySQL' extending provided level (1) and risk (1) values? [Y/n] y                                                                                               
[12:23:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'                                                                                                                                                                
[12:23:15] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'                                                                                                                                                        
[12:23:16] [INFO] testing 'Generic inline queries'                                                                                                                                                                                          
[12:23:16] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'                                                                                                                                              
[12:23:23] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'                                                                                                                                               
[12:23:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'                                                                                                                                                              
[12:23:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:23:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:23:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[12:23:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:23:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:23:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:23:30] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:23:35] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:23:39] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:23:43] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:23:46] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:23:46] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:23:46] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:23:46] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:23:46] [INFO] testing 'PostgreSQL inline queries'
[12:23:46] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:23:48] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:23:50] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:23:52] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:23:54] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:23:56] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:23:59] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:24:03] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:24:06] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:24:08] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:24:10] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:24:14] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:24:17] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:24:19] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:24:21] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:24:21] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:24:21] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:24:21] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:24:22] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:24:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:24:29] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[12:24:32] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[12:24:38] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:24:45] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:24:50] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[12:24:57] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[12:25:03] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[12:25:10] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[12:25:16] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[12:25:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[12:25:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[12:25:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[12:25:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[12:25:17] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[12:25:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:25:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[12:25:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:25:18] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[12:25:18] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[12:25:23] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[12:25:23] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[12:25:28] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[12:25:32] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[12:25:37] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[12:25:41] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[12:25:46] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[12:25:51] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[12:25:55] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[12:25:59] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:26:03] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:26:07] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:26:12] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:26:16] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[12:26:20] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[12:26:24] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:26:28] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[12:26:33] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[12:26:35] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:26:38] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[12:26:38] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[12:26:38] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[12:26:38] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[12:26:38] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[12:26:38] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[12:26:39] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[12:26:39] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[12:26:39] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[12:26:39] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[12:26:39] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[12:26:39] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:26:39] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[12:26:39] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[12:26:40] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:26:40] [INFO] testing 'MySQL inline queries'
[12:26:40] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[12:26:42] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[12:26:44] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[12:26:46] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[12:26:48] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[12:26:50] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[12:26:52] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:26:56] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[12:27:00] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[12:27:03] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[12:27:07] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[12:27:09] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[12:27:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[12:27:13] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[12:27:15] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[12:27:19] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[12:27:23] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[12:27:26] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[12:27:29] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[12:27:32] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[12:27:34] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[12:27:36] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[12:27:39] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[12:27:41] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[12:27:44] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[12:27:47] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[12:27:49] [INFO] testing 'MySQL AND time-based blind (ELT)'
[12:27:53] [INFO] testing 'MySQL OR time-based blind (ELT)'
[12:27:56] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[12:27:58] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[12:28:00] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:28:03] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:28:04] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[12:28:04] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[12:28:04] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[12:28:04] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[12:28:08] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[12:28:08] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[12:28:08] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[12:28:08] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[12:28:08] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[12:28:08] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:28:09] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[12:28:15] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[12:28:22] [WARNING] GET parameter 'username' does not seem to be injectable
[12:28:22] [INFO] testing if GET parameter 'password' is dynamic
[12:28:22] [WARNING] GET parameter 'password' does not appear to be dynamic
[12:28:22] [INFO] heuristic (basic) test shows that GET parameter 'password' might be injectable (possible DBMS: 'PostgreSQL or MySQL')
[12:28:22] [INFO] heuristic (XSS) test shows that GET parameter 'password' might be vulnerable to cross-site scripting (XSS) attacks
[12:28:23] [INFO] testing for SQL injection on GET parameter 'password'
[12:28:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:28:23] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:28:24] [INFO] testing 'Generic inline queries'
[12:28:24] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:28:31] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:28:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:28:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:28:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:28:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[12:28:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:28:38] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:28:38] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:28:38] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:28:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:28:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:28:51] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:28:55] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:28:55] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:28:55] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:28:55] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:28:55] [INFO] testing 'PostgreSQL inline queries'
[12:28:55] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:28:57] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:29:00] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:29:01] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:29:04] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:29:05] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:29:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:29:11] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:29:14] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:29:16] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:29:19] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:29:22] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:29:25] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:29:27] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:29:29] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:29:29] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:29:29] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:29:29] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:29:29] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:29:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:29:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[12:29:40] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[12:29:46] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:29:53] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:29:58] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[12:30:05] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[12:30:10] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[12:30:17] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[12:30:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[12:30:23] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[12:30:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[12:30:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[12:30:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[12:30:24] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[12:30:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:30:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[12:30:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:30:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[12:30:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[12:30:31] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[12:30:31] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[12:30:35] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[12:30:40] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[12:30:44] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[12:30:49] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[12:30:54] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[12:30:59] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[12:31:04] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[12:31:08] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:31:13] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:31:17] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:31:22] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:31:27] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[12:31:32] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[12:31:37] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:31:42] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[12:31:47] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[12:31:49] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:31:52] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[12:31:52] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[12:31:52] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[12:31:53] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[12:31:53] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[12:31:53] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[12:31:53] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[12:31:53] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[12:31:53] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[12:31:53] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[12:31:53] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[12:31:53] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:31:54] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[12:31:54] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[12:31:54] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:31:54] [INFO] testing 'MySQL inline queries'
[12:31:54] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[12:31:56] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[12:31:59] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[12:32:01] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[12:32:03] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[12:32:05] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[12:32:07] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:32:11] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[12:32:14] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[12:32:18] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[12:32:22] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[12:32:24] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[12:32:26] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[12:32:29] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[12:32:31] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[12:32:35] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[12:32:40] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[12:32:45] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[12:32:49] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[12:32:52] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[12:32:55] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[12:32:58] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[12:33:00] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[12:33:04] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[12:33:06] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[12:33:09] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[12:33:11] [INFO] testing 'MySQL AND time-based blind (ELT)'
[12:33:15] [INFO] testing 'MySQL OR time-based blind (ELT)'
[12:33:18] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[12:33:21] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[12:33:23] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:33:26] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:33:28] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[12:33:28] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[12:33:28] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[12:33:28] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[12:33:31] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[12:33:31] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[12:33:31] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[12:33:31] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[12:33:31] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[12:33:32] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:33:32] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[12:33:39] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[12:33:45] [WARNING] GET parameter 'password' does not seem to be injectable
[12:33:45] [INFO] testing if GET parameter 'user-info-php-submit-button' is dynamic
[12:33:45] [WARNING] GET parameter 'user-info-php-submit-button' does not appear to be dynamic
[12:33:45] [WARNING] heuristic (basic) test shows that GET parameter 'user-info-php-submit-button' might not be injectable
[12:33:45] [INFO] testing for SQL injection on GET parameter 'user-info-php-submit-button'
[12:33:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:33:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:33:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[12:33:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[12:33:51] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[12:33:54] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:33:58] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[12:34:02] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[12:34:06] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (ELT)'
[12:34:09] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[12:34:13] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (bool*int)'
[12:34:17] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:34:20] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:34:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:34:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET)'
[12:34:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (MAKE_SET - original value)'
[12:34:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT)'
[12:34:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (ELT - original value)'
[12:34:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int)'
[12:34:25] [INFO] testing 'MySQL boolean-based blind - Parameter replace (bool*int - original value)'
[12:34:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:34:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:34:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:34:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[12:34:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:34:25] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[12:34:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[12:34:26] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[12:34:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:34:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:34:26] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:34:26] [INFO] testing 'MySQL >= 5.0 boolean-based blind - Stacked queries'
[12:34:28] [INFO] testing 'MySQL < 5.0 boolean-based blind - Stacked queries'
[12:34:28] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:34:30] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:34:32] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'
[12:34:36] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'
[12:34:39] [INFO] testing 'MySQL >= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'
[12:34:42] [INFO] testing 'MySQL >= 5.5 OR error-based - WHERE or HAVING clause (EXP)'
[12:34:46] [INFO] testing 'MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET)'
[12:34:49] [INFO] testing 'MySQL >= 5.6 OR error-based - WHERE or HAVING clause (GTID_SUBSET)'
[12:34:52] [INFO] testing 'MySQL >= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'
[12:34:55] [INFO] testing 'MySQL >= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'
[12:34:58] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:35:02] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:35:05] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:35:08] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[12:35:12] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[12:35:15] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[12:35:18] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[12:35:21] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[12:35:24] [INFO] testing 'MySQL OR error-based - WHERE or HAVING clause (FLOOR)'
[12:35:26] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:35:29] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:35:31] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:35:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (BIGINT UNSIGNED)'
[12:35:33] [INFO] testing 'MySQL >= 5.5 error-based - Parameter replace (EXP)'
[12:35:34] [INFO] testing 'MySQL >= 5.6 error-based - Parameter replace (GTID_SUBSET)'
[12:35:34] [INFO] testing 'MySQL >= 5.7.8 error-based - Parameter replace (JSON_KEYS)'
[12:35:34] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[12:35:34] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (UPDATEXML)'
[12:35:34] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[12:35:34] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:35:34] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:35:34] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (BIGINT UNSIGNED)'
[12:35:34] [INFO] testing 'MySQL >= 5.5 error-based - ORDER BY, GROUP BY clause (EXP)'
[12:35:34] [INFO] testing 'MySQL >= 5.6 error-based - ORDER BY, GROUP BY clause (GTID_SUBSET)'
[12:35:34] [INFO] testing 'MySQL >= 5.7.8 error-based - ORDER BY, GROUP BY clause (JSON_KEYS)'
[12:35:34] [INFO] testing 'MySQL >= 5.0 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:35:34] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[12:35:34] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (UPDATEXML)'
[12:35:35] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[12:35:35] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:35:35] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:35:35] [INFO] testing 'Generic inline queries'
[12:35:35] [INFO] testing 'MySQL inline queries'
[12:35:35] [INFO] testing 'PostgreSQL inline queries'
[12:35:35] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[12:35:37] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[12:35:39] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[12:35:41] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP)'
[12:35:43] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[12:35:44] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK)'
[12:35:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:35:48] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:35:51] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:35:53] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:35:55] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:35:57] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:35:59] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:36:03] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[12:36:06] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[12:36:09] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[12:36:12] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[12:36:14] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[12:36:16] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[12:36:18] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[12:36:21] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[12:36:24] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[12:36:27] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[12:36:30] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[12:36:33] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK - comment)'
[12:36:35] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query - comment)'
[12:36:37] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK - comment)'
[12:36:39] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query - comment)'
[12:36:41] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[12:36:44] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (comment)'
[12:36:46] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[12:36:49] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP - comment)'
[12:36:51] [INFO] testing 'MySQL AND time-based blind (ELT)'
[12:36:54] [INFO] testing 'MySQL OR time-based blind (ELT)'
[12:36:57] [INFO] testing 'MySQL AND time-based blind (ELT - comment)'
[12:36:58] [INFO] testing 'MySQL OR time-based blind (ELT - comment)'
[12:37:00] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:37:03] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:37:06] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:37:08] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:37:10] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:37:13] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:37:17] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:37:19] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:37:21] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:37:23] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query - comment) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[12:37:24] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[12:37:25] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[12:37:25] [INFO] testing 'MySQL < 5.0.12 time-based blind - Parameter replace (BENCHMARK)'
[12:37:25] [INFO] testing 'MySQL > 5.0.12 time-based blind - Parameter replace (heavy query - comment)'
[12:37:28] [INFO] testing 'MySQL time-based blind - Parameter replace (bool)'
[12:37:28] [INFO] testing 'MySQL time-based blind - Parameter replace (ELT)'
[12:37:28] [INFO] testing 'MySQL time-based blind - Parameter replace (MAKE_SET)'
[12:37:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:37:28] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:37:28] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[12:37:28] [INFO] testing 'MySQL < 5.0.12 time-based blind - ORDER BY, GROUP BY clause (BENCHMARK)'
[12:37:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:37:28] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:37:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:37:29] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[12:37:34] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[12:37:38] [WARNING] GET parameter 'user-info-php-submit-button' does not seem to be injectable
[12:37:38] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment') and/or switch '--random-agent'

[*] ending @ 12:37:38 /2022-04-15/
